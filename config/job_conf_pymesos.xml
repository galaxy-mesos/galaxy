<?xml version="1.0"?>
<job_conf>
    <plugins>
        <!-- "workers" is the number of threads for the runner's work queue.
             The default from <plugins> is used if not defined for a <plugin>.
          -->
        <plugin id="local" type="runner" load="galaxy.jobs.runners.local:LocalJobRunner" workers="4"/>
        <plugin id="pymesos" type="runner" load="galaxy.jobs.runners.pymesos:PyMesosJobRunner">
            <!-- Different DRMs handle successfully completed jobs differently,
                 these options can be changed to handle such differences and
                 are explained in detail on the Galaxy wiki. Defaults are shown -->
            <param id="chronos_server">172.30.6.66:4443</param>
            <param id="user">admin</param>
            <param id="password">test_pass</param>
        </plugin>
    </plugins>
    <handlers default="handlers">
        <!-- Additional job handlers - the id should match the name of a
             [server:<id>] in galaxy.ini.-->
         
        <handler id="handler0" tags="handlers"/>
        <handler id="handler1" tags="handlers"/>
        <handler id="handler2" tags="handlers"/>
        <handler id="handler3" tags="handlers"/>
        <handler id="handler4" tags="handlers"/>
        <handler id="handler5" tags="handlers"/>

        <!-- Handlers will load all plugins defined in the <plugins> collection
             above by default, but can be limited to a subset using <plugin>
             tags. This is useful for heterogenous environments where the DRMAA
             plugin would need to be loaded more than once with different
             configs.
         -->
        <handler id="main"/>
    </handlers>   
    <destinations default="pymesos_container">
        <!-- Destinations define details about remote resources and how jobs
             should be executed on those remote resources.
         -->
        <destination id="local" runner="local"/>
        <!--<destination id="docker_local" runner="local">
            <param id="docker_enabled">true</param>
        </destination>-->
        <destination id="pymesos_container" runner="pymesos">
            <param id="mesos_task_cpu">0.1</param>
            <param id="mesos_task_mem">128</param>
            <param id="mesos_task_disk">256</param>
            <param id="docker_enabled">true</param>
            <param id="pymesos_default_container_id">libmesos/ubuntu</param>  <!--
              Specify the image on which the jobs have to be executed -->
            <param id="pymesos_volumes_containerPath">/home/galaxy/galaxy</param>
            <param id="pymesos_volumes_hostPath">/home/galaxy/galaxy</param>
           
            <param id="virtualenv">false</param>
            <!-- If a tool execution in container requires galaxy virtualenv, 
                 then enable it by setting the value to true.
                 Disable venv by setting the value to false.
             -->            
        </destination>
        <destination id="smalt_container" runner="pymesos">
            <param id="mesos_task_cpu">0.1</param>
            <param id="mesos_task_mem">128</param>
            <param id="mesos_task_disk">256</param>
            <param id="docker_enabled">true</param>
            <param id="pymesos_default_container_id">apetkau/smalt-galaxy</param>  <!--
              Specify the image on which the jobs have to be executed -->
            <param id="pymesos_volumes_containerPath">/home/galaxy/galaxy</param>
            <param id="pymesos_volumes_hostPath">/home/galaxy/galaxy</param>

            <param id="virtualenv">false</param>
            <!-- If a tool execution in container requires galaxy virtualenv, 
                 then enable it by setting the value to true.
                 Disable venv by setting the value to false.
            -->
        </destination>
    </destinations>
    <tools>
      <tool id="GoChHello_id" destination="pymesos_container"/>
      <tool id="GoChCat_id" destination="pymesos_container"/>
      <tool id="smalt_wrapper (docker)" destination="smalt_container"/>
      <tool id="upload1" destination="local"/>
    </tools>
    <limits> 
        <limit type="registered_user_concurrent_jobs">10</limit>
        <!-- anonymous_user_concurrent_jobs:
                Likewise, but for unregistered/anonymous users.
        -->
        <limit type="anonymous_user_concurrent_jobs">10</limit>
        <!-- destination_user_concurrent_jobs:
                The number of jobs a user can have active in the specified
                destination, or across all destinations identified by the
                specified tag. (formerly: concurrent_jobs)
        -->
        <limit type="destination_user_concurrent_jobs" id="pymesos">10</limit>
        <limit type="destination_user_concurrent_jobs" tag="mycluster">2</limit>
        <limit type="destination_user_concurrent_jobs" tag="longjobs">1</limit>
        <!-- destination_total_concurrent_jobs:
                The number of jobs that can be active in the specified
                destination (or across all destinations identified by the
                specified tag) by any/all users.
        -->
        <limit type="destination_total_concurrent_jobs" id="local">16</limit>
        <limit type="destination_total_concurrent_jobs" tag="longjobs">100</limit>
        <!-- walltime:
                Amount of time a job can run (in any destination) before it
                will be terminated by Galaxy.
         -->
        <limit type="walltime">24:00:00</limit>
        <!-- output_size:
                Size that any defined tool output can grow to before the job
                will be terminated. This does not include temporary files
                created by the job. Format is flexible, e.g.:
                '10GB' = '10g' = '10240 Mb' = '10737418240'
        -->
        <limit type="output_size">10GB</limit>
    </limits>
    <macros>
        <xml name="foohost_destination" tokens="id,walltime,ncpus">
            <destination id="@ID@" runner="cli">
                <param id="shell_plugin">SecureShell</param>
                <param id="job_plugin">Torque</param>
                <param id="shell_username">galaxy</param>
                <param id="shell_hostname">foohost_destination.example.org</param>
                <param id="job_Resource_List">walltime=@WALLTIME@,ncpus=@NCPUS@</param>
            </destination>
        </xml>
    </macros>
</job_conf>
